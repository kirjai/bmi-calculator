/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }

  interface HTMLAttributes {}
}


import {
  App as BmiApp
} from './components/app/app.component';

declare global {
  interface HTMLBmiAppElement extends BmiApp, HTMLStencilElement {
  }
  var HTMLBmiAppElement: {
    prototype: HTMLBmiAppElement;
    new (): HTMLBmiAppElement;
  };
  interface HTMLElementTagNameMap {
    "bmi-app": HTMLBmiAppElement;
  }
  interface ElementTagNameMap {
    "bmi-app": HTMLBmiAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "bmi-app": JSXElements.BmiAppAttributes;
    }
  }
  namespace JSXElements {
    export interface BmiAppAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  BmiForm as BmiForm
} from './components/bmi-form/bmi-form.component';

declare global {
  interface HTMLBmiFormElement extends BmiForm, HTMLStencilElement {
  }
  var HTMLBmiFormElement: {
    prototype: HTMLBmiFormElement;
    new (): HTMLBmiFormElement;
  };
  interface HTMLElementTagNameMap {
    "bmi-form": HTMLBmiFormElement;
  }
  interface ElementTagNameMap {
    "bmi-form": HTMLBmiFormElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "bmi-form": JSXElements.BmiFormAttributes;
    }
  }
  namespace JSXElements {
    export interface BmiFormAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  Result as BmiResult
} from './components/result/result.component';

declare global {
  interface HTMLBmiResultElement extends BmiResult, HTMLStencilElement {
  }
  var HTMLBmiResultElement: {
    prototype: HTMLBmiResultElement;
    new (): HTMLBmiResultElement;
  };
  interface HTMLElementTagNameMap {
    "bmi-result": HTMLBmiResultElement;
  }
  interface ElementTagNameMap {
    "bmi-result": HTMLBmiResultElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "bmi-result": JSXElements.BmiResultAttributes;
    }
  }
  namespace JSXElements {
    export interface BmiResultAttributes extends HTMLAttributes {
      bmi?: number;
    }
  }
}


import {
  Toggle as BmiToggle
} from './components/toggle/toggle.component';

declare global {
  interface HTMLBmiToggleElement extends BmiToggle, HTMLStencilElement {
  }
  var HTMLBmiToggleElement: {
    prototype: HTMLBmiToggleElement;
    new (): HTMLBmiToggleElement;
  };
  interface HTMLElementTagNameMap {
    "bmi-toggle": HTMLBmiToggleElement;
  }
  interface ElementTagNameMap {
    "bmi-toggle": HTMLBmiToggleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "bmi-toggle": JSXElements.BmiToggleAttributes;
    }
  }
  namespace JSXElements {
    export interface BmiToggleAttributes extends HTMLAttributes {
      active?: string;
      options?: string[];
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
